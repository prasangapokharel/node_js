Must set package.json file like this before start!

    {
  "name": "session_nodejs",
  "version": "1.0.0",
  "description": "Starting as beginners prasanga raman pokharel.",
  "main": "server.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon server.js"
  },
  "repository": {
    "type": "git",
    "url": "node_js"
  },
  "author": "prasanga",
  "license": "ISC",
  "dependencies": {
    "express": "^4.18.2",
    "mysql2": "^3.7.0",
    "nodemon": "^3.0.2",
    "sequelize": "^6.35.2"
  }
}
----------------------------------------Start-------------------------------------------------------------------------


Step-1:  Create "server.js" file in Main folder and where roots connection establish model file "index.js".

--------------------------------------------
const db = require('./model/index.js')

const app = express();
const port = 3000;

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});

------------------------------------------------------------------------------



Step-2: Create dbConfig folder and create dbConfig.js file on it.
---------------------------------------------------------------------------------------
module.exports = {
    username: "root",
    host: 'localhost',
    db: 'okcrud',
    password: '',
    dialect: 'mysql',  // Corrected property name
    pool: {
        max: 5,
        min: 0,
        idle: 0,
        acquire: 10000,
    }
};
----------------------------------------------------------------------------------


Step-3: Create model folder and create  "index.js" file on it.

-----------------------------------------------------------------


const Sequelize = require("sequelize");
const dbConfig = require('../dbConfig/dbConfig')
const sequelize = new Sequelize(
  dbConfig.db,
  dbConfig.username,
  dbConfig.password,
  {
    host: dbConfig.host,
    dialect: dbConfig.dialect,
    pool: {
      max: dbConfig.pool.max,
      min: dbConfig.pool.min,
      accurate: dbConfig.pool.accurate, // Corrected property name
      idle: dbConfig.pool.idle,
    },
  }
);

const connectDatabase = async () => {
  try {
    await sequelize.authenticate();
    console.log("Connection has been established successfully.");
  } catch (error) {
    console.error("Unable to connect to the database:", error);
  }
};